@model Reliance.Modals.RegistationDo
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery-1.7.1.js"></script>
@{
    ViewBag.Title = "EditUsers";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

@using (Html.BeginForm("UpdateUsers","Account"))
{
    
    @Html.ValidationSummary(true)

    <fieldset>
    
        <div class="form-body">
            	<div class="form-group">
        <div class="editor-label">
            @Html.HiddenFor(model => model.Userid)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.Userid)
         
        </div>
            </div>
		          <div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>
            </div>
                 
			<div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>
</div>
               
                  
				<div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
       </div>
                   
               
					<div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.MobileNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MobileNo)
            @Html.ValidationMessageFor(model => model.MobileNo)
        </div>
              </div>
                       
                  
						<div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.Role)
        </div>
        <div class="editor-field">
          <select  name="Role">
            @{RelianceController.RoleMasterController  roleMasterController= new RelianceController.RoleMasterController();
              Reliance.Modals.RoleMasterDoList roleModal = roleMasterController.AllRole(Convert.ToInt32(Session["LOGGED_Company"]));
               <option value="0">Select</option>
               for (int i = 0; i < roleModal.Count; i++)
                {	               
	           <option value="@roleModal[i].RoleId">@roleModal[i].RoleName </option>
                 }
              }
			</select>    
            @Html.ValidationMessageFor(model => model.Role)
        </div>
            </div>
                            
               
							<div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.DOB)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DOB)
            @Html.ValidationMessageFor(model => model.DOB)
        </div>
</div>
                              
                  <div class="form-body">
										<div class="form-group">
        <div class="editor-label">
            @Html.LabelFor(model => model.IsAuthantication)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsAuthantication)
            @Html.ValidationMessageFor(model => model.IsAuthantication)
        </div>
</div>
      
</div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}


    @Html.ActionLink("Back to List", "Index")

