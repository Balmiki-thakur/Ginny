@*@{
    ViewBag.Title = "MasterFormcreate";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<input type="hidden"   id="FormId"  name="FormId" value="@ViewBag.Id" />
<input type="hidden"   id="RoleId"  name="FormId" value="@Session["LOGGED_ROLE"]"  />
<input type="hidden"   id="UserId"  name="FormId" value="@Session["LOGGED_UserId"]" />
<script src="~/Scripts/jquery-1.7.1.js">

</script>
 <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script type="text/javascript">
    $(document).ready(function () {
        var formid = 6//document.getElementById('FormId').value;
        var CompanyId = 1//= document.getElementById('CompanyId').value;
        debugger;
        $.ajax({
            type: "POST",
            url: "/Dynamic/MultiFields/?formid=" + formid + "&CompanyId=" + CompanyId,
            datatype: "JSON",
            contentType: "application/json;charset=utf-8",
            traditional: true,
            success: function (data) {
                var data = $.parseJSON(JSON.stringify(data));
                var FormName = '';
                var ChildForm = 'ChildForm';
                for (var j = 0; j < data.Response.length; j++) {
                    var Display_name = data.Response[j].Display_name;
                    var dropid = data.Response[j].FormId;
                    var place = data.Response[j].Field_description;
                    var DisplayName = data.Response[j].Display_name;
                    var DataType = data.Response[j].Field_type;
                    var FormName = data.Response[j].FormName;
                    var DocumentName = data.Response[j].DocumentName
                    var DocumentField = data.Response[j].DocumentField
                    var FieldId = data.Response[j].FieldId;
                    var IsLookUp = data.Response[j].IsLookUp;
                    var Dataway = data.Response[j].DataTypes;
                    var UFieldName = data.Response[j].UFieldName;
                    var IsDDLFilter = data.Response[j].IsDDLFilter;
                    if (data.Response[j].Field_type == 'Text Box') {
                        if (Dataway == 'date') {
                            $(content).append
                           (

                               "<div class='FormCounter'>"
                           + "<span class='form-group'>" + UFieldName + ":</span>"
                           + " <input type='text' required class='form-control input-circle datepicker' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/>"
                           + "</div>"

                                );
                            $(".datepicker").datepicker();

                        }

                        else if (Dataway == 'TextArea') {

                            $(content).append
                            (
                            "<div class='FormCounter'>"
                             + "<span class='form-group'>" + UFieldName + ":</span>"
                             + "<textarea name='" + Display_name + "' rows='4' class='form-control input-circle'  placeholder='" + place + "' id='" + Display_name + "'>"
                             + "</textarea>"
                             + "</div>"

                           );

                        }
                        else {
                            $(content).append
                                (
                                 "<div class='FormCounter'>"
                                + "<span class='form-group'>" + UFieldName + ":</span>"
                                + " <input type='" + Dataway + "' required class='form-control input-circle' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/>"
                                + "</div>"
                               );
                        }
                        if (ChildForm == 'ChildForm') {
                            var childtextlables = '';
                            var childtextInput = '';
                            childtextlables += "<th> " + UFieldName + "</td>"
                            childtextInput += "<td><input type='" + Dataway + "' required class='form-control input-circle' placeholder='" + place + "' id=''  name='" + Display_name + "'value=''/></td>"
                            $("#header_field").append(childtextlables);
                            $("#body_fields").append(childtextInput);
                        }
                    }

                    else if (data.Response[j].Field_type == 'RadioCheck') {

                        var htmlCheckBoxList = '';
                        var htmlCheckBox = '';
                        htmlCheckBoxList += "<label class='col-md-3 control-label'>" + UFieldName + "</label>"
                        $.ajax({
                            type: "POST",
                            url: "/FormMaster/DropDownData/?FormId=" + dropid + "&FieldId=" + FieldId,
                            datatype: "JSON",
                            contentType: "application/json;charset=utf-8",
                            traditional: true,
                            async: false,
                            success: function (data) {

                                var data = $.parseJSON(JSON.stringify(data));
                                //htmlvalue += '<option value="0">Select</option>';
                                for (var i = 0; i < data.Responses.length; i++) {
                                    htmlCheckBoxList = "<div >"
                                    htmlCheckBoxList += "<label class='col-md-3 control-label'>" + UFieldName + "</label>"
                                    htmlCheckBox += " <span>  <input type='radio' name=" + Display_name + " value=" + data.Responses[i].Key + " /><label>" + data.Responses[i].Values + "</label></span>"
                                    htmlCheckBoxList += "</div>";
                                    //htmlCheckBoxList += "<option class=' " + data.Responses[i].FormName + "' value='" + data.Responses[i].Key + "'>" + data.Responses[i].Values + "</option>";
                                }

                            },
                        });
                        $('#htmlRadioLable').append(htmlCheckBoxList);
                        $('#htmlCheckRadioList').append(htmlCheckBox);
                    }
                    else if (data.Response[j].Field_type == 'AutoComplete') {
                        $(content).append
                            (
                            "<div class='FormCounter'>"
                            + "<span class='form-group'>" + UFieldName + ":</span>"
                            + " <input type='" + Dataway + "' required class='form-control input-circle autocomplet' placeholder='" + place + "'  id='txtAutoComplete'  name='" + Display_name + "'value=''/>"
                            + "</div>"
                           );

                        if (ChildForm == 'ChildForm') {
                            var childautolable = '';
                            var childautoInput = '';
                            childautolable += "<th> " + Display_name + "</th> "
                            childautoInput += "<td><input type='" + Dataway + "' required class='form-control input-circle' placeholder='" + place + "'  name='" + Display_name + "'value=''/></td>"
                            $("#header_field").append(childautolable);
                            $("#body_fields").append(childautoInput);
                        }
                    }

                    else if (data.Response[j].Field_type == 'Lookup') {
                        var LookUpAppand = '';
                        LookUpAppand += "<div class='FormCounter'>"
                        LookUpAppand += "<span class='form-group'>" + UFieldName + ":</span>"
                        LookUpAppand += " <input type='" + DataType + "'  required readonly='readonly' class='form-control input-circle LookUpID-" + FieldId + "' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/>"
                        LookUpAppand += "</div>";
                        $("#LookUp").append(LookUpAppand);

                        if (ChildForm == 'ChildForm') {
                            var ChildLookUpAppandlable = '';
                            var LookUpAppand = '';
                            ChildLookUpAppandlable += "<th> " + UFieldName + "</th>"
                            LookUpAppand += "<td> <input type='" + DataType + "'  required readonly='readonly' class='form-control input-circle LookUpID-" + FieldId + "' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/></td>";
                            $("#header_field").append(ChildLookUpAppandlable);
                            $("#body_fields").append(LookUpAppand);
                        }
                    }
                    else if (data.Response[j].Field_type == 'FilterDDL') {
                        if (IsDDLFilter == 1) {
                            var IsDDLFilterAppand = '';
                            var IsDDLFilterS = '';
                            IsDDLFilterAppand += "<div class='FormCounter'>"
                            IsDDLFilterAppand += "<span class='form-group'>" + UFieldName + ":</span>"
                            IsDDLFilterAppand += "<select   onchange='GetDDlFilter(" + DisplayName + ")' required class=' form-control input-circle  ISDDLFIlterss' DDlFilter='" + FieldId + "' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "' value=''>"

                            IsDDLFilterAppand += "</select>"

                            //IsDDLFilterAppand += " <input type='" + DataType + "'  required readonly='readonly' class='form-control input-circle LookUpID-" + FieldId + "' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/>"
                            IsDDLFilterAppand += "</div>";
                        }
                        else {

                            var IsDDLFilterAppand = '';
                            var IsDDLFilterS = '';
                            IsDDLFilterAppand += "<div class='FormCounter'>"
                            IsDDLFilterAppand += "<span class='form-group'>" + UFieldName + ":</span>"
                            IsDDLFilterAppand += "<select   required class='form-control input-circle  ISDDLFIlterss  ISDDLFIlter-" + FieldId + "' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''>"
                            IsDDLFilterAppand += "</select>"
                            IsDDLFilterAppand += "</div>";

                        }
                        //  IsDDLFilterS += "<select onchange='GetDDlFilter(" + DisplayName + ")' class='form-control' DDlFilter='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"


                        $("#IsDDLFilter").append(IsDDLFilterAppand);

                    }

                    else if (data.Response[j].Field_type == 'Drop Down') {


                        if (data.Response[j].IsRoleAssignment == 1) {
                            var UserId = document.getElementById("UserId").value;
                            var RoleId = document.getElementById("RoleId").value;
                            var Form = document.getElementById("FormId").value;

                            var htmlvalue = '';
                            $.ajax({
                                type: "POST",
                                url: "/FormMaster/DropDownDataIsRoleAssignMent/?FormId=" + dropid + "&FieldId=" + FieldId + "&UserId=" + UserId + "&RoleId=" + RoleId + "&Form=" + Form,
                                datatype: "JSON",
                                contentType: "application/json;charset=utf-8",
                                traditional: true,
                                async: false,
                                success: function (data) {
                                    var data = $.parseJSON(JSON.stringify(data));
                                    htmlvalue += '<option value="0">Select</option>';
                                    for (var i = 0; i < data.Responses.length; i++) {
                                        htmlvalue += "<option class=' " + data.Responses[i].FormName + "' value='" + data.Responses[i].Key + "'>" + data.Responses[i].Values + "</option>";
                                    }
                                },
                            });
                            var htmlappend = '';
                            htmlappend += "<div class='FormCounter'><span class='form-group'>" + UFieldName + ":</span>" + "<div class='form-group'>"
                            if (IsLookUp == 1) {

                                htmlappend += "<select onchange='GetLooKUP(" + DisplayName + ")' class='form-control' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                            }

                            else if (IsDDLFilter == 1) {
                                htmlappend += "<select onchange='GetDDlFilter(" + DisplayName + ")' class='form-control' DDlFilter='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                            }
                            else {

                                htmlappend += "<select  class='form-control' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                            }
                            htmlappend += "</div></div>"
                            $('#dropdow').append(htmlappend);


                            if (ChildForm == 'ChildForm') {
                                var htmlappend = '';
                                var dropddownlable = ''
                                dropddownlable += "<th> " + Display_name + "</th>"
                                if (IsLookUp == 1) {
                                    htmlappend += "<select onchange='GetLooKUP(" + DisplayName + ")' class='form-control input-circle' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                                }
                                else {
                                    htmlappend += "<select  class='form-control  input-circle' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control  dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                                }
                                $('#header_field').append(dropddownlable);
                                $('#body_fields').append(htmlappend);
                            }
                        }

                        else {
                            var htmlvalue = '';
                            $.ajax({
                                type: "POST",
                                url: "/FormMaster/DropDownData/?FormId=" + dropid + "&FieldId=" + FieldId,

                                datatype: "JSON",
                                contentType: "application/json;charset=utf-8",
                                traditional: true,
                                async: false,
                                success: function (data) {
                                    var data = $.parseJSON(JSON.stringify(data));
                                    htmlvalue += '<option value="0">Select</option>';
                                    for (var i = 0; i < data.Responses.length; i++) {
                                        htmlvalue += "<option class=' " + data.Responses[i].FormName + "' value='" + data.Responses[i].Key + "'>" + data.Responses[i].Values + "</option>";
                                    }
                                },
                            });
                            var htmlappend = '';
                            htmlappend += "<div class='FormCounter'><span class='form-group'>" + UFieldName + ":</span>" + "<div class='form-group'>"
                            if (IsLookUp == 1) {
                                htmlappend += "<select onchange='GetLooKUP(" + DisplayName + ")' class='form-control' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                            }
                            else if (IsDDLFilter == 1) {
                                htmlappend += "<select onchange='GetDDlFilter(" + DisplayName + ")' class='form-control' DDlFilter='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                            }
                            else {
                                htmlappend += "<select  class='form-control' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                            }
                            htmlappend += "</div></div>"
                            $('#dropdow').append(htmlappend);


                            if (ChildForm == 'ChildForm') {
                                var htmlappend = '';
                                var dropddownlable = ''
                                dropddownlable += "<th> " + Display_name + "</th>"
                                if (IsLookUp == 1) {
                                    htmlappend += "<select onchange='GetLooKUP(" + DisplayName + ")' class='form-control input-circle' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control input-lg dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                                }
                                else {
                                    htmlappend += "<select  class='form-control  input-circle' look='" + FieldId + "' id='" + DisplayName + "' name='" + DisplayName + "' required='' class='form-control  dspn' placeholder=' " + place + "'>" + htmlvalue + "</select>"
                                }
                                $('#header_field').append(dropddownlable);
                                $('#body_fields').append(htmlappend);
                            }




                        }

                        //$('#body_fields').append(htmlappend);
                    }

                    else if (data.Response[j].Field_type == 'CheckBoxList') {

                        var htmlCheckBoxList = '';
                        var htmlCheckBox = '';
                        htmlCheckBoxList += "<label class='col-md-3 control-label'>" + Display_name + "</label>"
                        $.ajax({
                            type: "POST",
                            url: "/FormMaster/DropDownData/?FormId=" + dropid + "&FieldId=" + FieldId,
                            datatype: "JSON",
                            contentType: "application/json;charset=utf-8",
                            traditional: true,
                            async: false,
                            success: function (data) {

                                var data = $.parseJSON(JSON.stringify(data));
                                //htmlvalue += '<option value="0">Select</option>';
                                for (var i = 0; i < data.Responses.length; i++) {
                                    htmlCheckBoxList = "<div >"
                                    htmlCheckBoxList += "<label class='col-md-3 control-label'>" + Display_name + "</label>"
                                    htmlCheckBox += " <span><input type='checkbox' name=" + Display_name + " value=" + data.Responses[i].Key + " /><label>" + data.Responses[i].Values + "</label></span>"
                                    htmlCheckBoxList += "</div>";
                                    //htmlCheckBoxList += "<option class=' " + data.Responses[i].FormName + "' value='" + data.Responses[i].Key + "'>" + data.Responses[i].Values + "</option>";
                                }

                            },
                        });
                        $('#htmlCheckBox').append(htmlCheckBoxList);
                        $('#htmlCheckBoxslist').append(htmlCheckBox);
                    }
                }
                document.getElementById('formNameId').innerText = FormName;
                document.getElementById('formNameTable').innerHTML = FormName;
                document.getElementById('formName').value = FormName;
                var n = 2;
                $("[class*='columnStyle'] div").children('.FormCounter').addClass('col-md-' + 12 / n + '');
                // $("#content").html(str);ss
            },

        });

    });






    function GetLooKUP(sel) {
        var currentFieldId = $(sel).attr("look");
        var Id = $('option:selected', sel).val();

        $.ajax({
            type: "POST",
            url: "/FormMaster/LooKUpdataBind/?currentFieldId=" + currentFieldId + "&Id=" + Id,
            // url: "/FormMaster/DropDownFunctionValue/?colloumType=" + DocumentName + "&formName=" + FormName + "&ColloumName=" + DocumentField + "&fieldtype=" + DataType + "&fieldName=" + Display_name,
            datatype: "JSON",
            contentType: "application/json;charset=utf-8",
            traditional: true,
            async: false,
            success: function (data) {
                //  var FormName = '';
                for (var j = 0; j < data.Responses.length; j++) {
                    var data = $.parseJSON(JSON.stringify(data));
                    var lookdata = data.Responses[j].LookUpData;
                    var lookKey = data.Responses[j].Id;
                    var lookId = data.Responses[j].LookUpId;
                    // var lookupId = lookId;
                    $(".LookUpID-" + lookId).val(lookdata);
                    //  $(".LookUpID-" + lookupId).name(lookKey);
                    //  <input type='" + DataType + "' required class='form-control input-circle' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/>
                    //  $('#lookup1').val(lookdata);


                }
            }
        });
    }
    function GetDDlFilter(sel) {

        var currentFieldId = $(sel).attr("DDlFilter");
        var Id = $('option:selected', sel).val();
        var htmlFilter = '';
        $.ajax({
            type: "POST",
            url: "/FormMaster/DDLFilterUpdataBind/?currentFieldId=" + currentFieldId + "&Id=" + Id,
            // url: "/FormMaster/DropDownFunctionValue/?colloumType=" + DocumentName + "&formName=" + FormName + "&ColloumName=" + DocumentField + "&fieldtype=" + DataType + "&fieldName=" + Display_name,
            datatype: "JSON",
            contentType: "application/json;charset=utf-8",
            traditional: true,
            async: false,
            success: function (data) {

                var data = $.parseJSON(JSON.stringify(data));
                htmlFilter += '<option value="0">Select</option>';
                for (var i = 0; i < data.Responses.length; i++) {
                    htmlFilter += "<option class=' " + data.Responses[i].FormName + "' value='" + data.Responses[i].Key + "'>" + data.Responses[i].Values + "</option>";
                }
                // $(".LookUpID-" + lookId).val(lookdata);
                $(".ISDDLFIlterss").html(htmlFilter)
            }
        });
    }
    $(document).ready(function () {
        $("#txtAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/FormMaster/AutoCompleteCountry",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {

                        response($.map(data, function (item, idx) {
                            //   alert(item);
                            //   alert(idx);
                            return {
                                label: item.Value,
                                value: item.Key
                            };
                        }));
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
    var data = [{ id: 108, name: "Jamaica" }, { id: 110, name: "Japan" }, { id: 110, name: "Japan7" }, { id: 111, name: "Japan1" }, { id: 112, name: "Japan2" }, { id: 113, name: "Japan3" }, { id: 114, name: "Japan4" }];
    $(document).ready(function () {

        $('#CountryName').autocomplete({
            source: function (request, response) {
                response($.map(data, function (item) {
                    return {
                        label: item.name,
                        value: item.id
                    }
                }));
            },
            select: function (e, ui) {
                e.preventDefault();
                $(this).val(ui.item.label);
                $('#CountryID').html(ui.item.value);
            }
        });
    });
    var Formid = 6;
    $.ajax({
        type: "POST",
        url: "/FieldValidation/ValidationByFormId/?formid=" + Formid,
        datatype: "JSON",
        success: function (data) {
            var data = $.parseJSON(JSON.stringify(data));
            var textAppand = "";
            for (var j = 0; j < data.Response.length; j++) {

                var FormId = data.Response[j].FormId;
                var FieldId = data.Response[j].FieldId;
                var OpratorId = data.Response[j].Operator;
                var Value = data.Response[j].Value;
                var ErrorMsg = data.Response[j].ErrorMsg;
                var DocumentType = data.Response[j].DocNature;
                var ValidationType = data.Response[j].ValidationType;
                textAppand += " <input type='hidden'  class='form-control input-circle'validationtype='" + ValidationType + "' ValidateValue='" + Value + "'    id='M" + FieldId + "' name='" + FieldId + "' value='" + ErrorMsg + "'/>"
                $("#contentdiv").html(textAppand);

            }

        }
    });

    function checkname(formid, fieldid) {
        var name = document.getElementById(fieldid).value;
        if (name) {
            $.ajax({
                type: "POST",
                url: "/FormMaster/UniqueFieldCheck/?FormId=" + formid + "&FieldId=" + fieldid + "&Value= " + name,
                datatype: "JSON",
                contentType: "application/json;charset=utf-8",
                traditional: true,
                async: false,
                success: function (data) {

                    var Response = data.Response;
                    if (Response == "OK") {
                        debugger;
                        $('#errmsg').html("Data is allready Exist");
                        return false;

                    }
                    else {

                        return true;
                    }
                }
            });
        }
        else {
            $('#name_status').html("");
            return false;
        }
    }
    
</script>
<script type="text/javascript">
   
</script>
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/select2/select2.css" />
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.css" />
<!-- Modal -->
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/icheck/skins/all.css" />
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/icheck/skins/all.css" />
 <div class="portlet box green">
                        <div class="portlet-title">
                            <div class="caption">

                                <i class="fa fa-gift"></i><span name="formNameId" id="formNameId"></span>
                            </div>
                            <div class="tools">
                                <a href="javascript:;" class="collapse" data-original-title="" title=""></a>
                                <a href="#portlet-config" data-toggle="modal" class="config" data-original-title="" title=""></a>
                                <a href="javascript:;" class="reload" data-original-title="" title=""></a>
                               
                            </div>
                        </div>
                        <div class="portlet-body form" id="FormValidationId">
                            <!-- BEGIN FORM-->
                    @using (Html.BeginForm("MasterFormcreates", "FormMaster", FormMethod.Post, new { enctype = "multipart/form-data", }))
                    {        
                            <form id="ChildForm" >
                                <input type="hidden" id="formName" name="formName" />
                                <div class="form-body 2columnStyle"><div id="errmsg" style="text-align:center;color:red"></div>
          <input type="hidden" id="CompanyId" name="Eid" value="@Session["LOGGED_Company"]" />
        @{ RelianceController.AllFieldandPropertyController allFieldandPropertyController = new RelianceController.AllFieldandPropertyController();
           Reliance.Modals.AllFieldProPertyList formlist = allFieldandPropertyController.FieldByFormId("8", Convert.ToString(@Session["LOGGED_Company"]));

          foreach (var i in formlist)
          {
                    if (i.ActionFormFields != true)
                    {
                                   
                                          if (i.Field_type == "Text Box")
                                          {

                                              if (i.Field_type == "date")
                                              {
                                                  
                    
                                                     @Html.DisplayFor(x=>x.UFieldName)
                                                   
                                                <input type="@i.DataTypes"  class='form-control input-circle datepicker ' placeholder="@formlist[i].Field_description" onkeyup="checkname();" id="@formlist[i].FieldId" name="@formlist[i].Display_name" value=""/>        
                                                  
                                                            </div>
                                                      
                                              }
                                              else if (formlist[i].Field_type == "TextArea")
                                              {
                                                            <div class="FormCounter">
                                                                <span class="form-group">@formlist[i].UFieldName:</span>
                                                                 
                                                                <textarea name="@formlist[i].DataTypes" rows="4" class="form-control input-circle "  placeholder="@formlist[i].Field_description"  id="@formlist[i].FieldId"  name="@formlist[i].Display_name">
                                                                </textarea>
                                                                </div>
                                              }
                                              else
                                              {
                                                  if (formlist[i].UNIQUE == true)
                                                  {
                                                           <div class="FormCounter">
                                                            <label>@formlist[i].UFieldName</label>
                                                            <input type="@formlist[i].DataTypes"  class="form-control input-circle"  placeholder="@formlist[i].Field_description" onblur="checkname(@formlist[i].FormId,@formlist[i].FieldId);"  id="@formlist[i].FieldId"   name="@formlist[i].Display_name"value=""/>                   
                                                                    </div>
                                                  }
                                                  else
                                                  {
                                                              <div class="FormCounter">
                                                            <label>@formlist[i].UFieldName</label>
                                                            <input type="@formlist[i].DataTypes"  class="form-control input-circle"  placeholder="@formlist[i].Field_description"  id="@formlist[i].FieldId"   name="@formlist[i].Display_name"value=""/>                   
                                                                    </div>
                                                  }
                                              }

                                          }
                                              @:</div>
                          }
                                    @:<div>
                                          if (formlist[i].Field_type == "RadioCheck")
                                          {   
                                                   <div class="FormCounter">
                                                <label>@formlist[i].UFieldName</label>
                                                     @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));
                                                       for (int j = 0; j < dropDownValueDoList.Count; j++)
                                                       {
                                                      <input type="radio" name="@formlist[i].Display_name" value="@dropDownValueDoList[j].Key + " /><label>@dropDownValueDoList[j].Values</label>
                                                       }        
                                                 }
                                              </div>
                                          }
                                              @:</div>
                                    @:<div>
                                          if (formlist[i].Field_type == "AutoComplete")
                                          { 
                                                                         <div class="FormCounter">
                                                   <label>@formlist[i].UFieldName +</label>
                                                <input type="@formlist[i].DataTypes"  class='form-control input-circle autocomplet ' placeholder="@formlist[i].Field_description" id='txtAutoComplete'  name="@formlist[i].Display_name"value=""/>       
                                                </div>               
                                          }
                                @:</div>
                                    @:<div>
                                    if (formlist[i].Field_type == "Drop Down")
                                    {
                                        if (formlist[i].IsRoleAssignment == 1)
                                        {
                                            Reliance.Modals.IsROleAssignmentDo IsROleAssignmentDo = RelianceController.IsRoleAssignmentController.IsROleAssignment(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId), Convert.ToString(Session["LOGGED_UserId"]), Convert.ToString(Session["LOGGED_ROLE"]), "");
                                            if (IsROleAssignmentDo.DocumentDataid == "")
                                            {
                                                if (formlist[i].IsLookUp == 1)
                                                {
                                                        <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                      { 
                                                        <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                      } 
                                                        }
                                                        </select>
                                                    </div>
                                                }
                                                else if (formlist[i].IsDDLFilter == 1)
                                                {
                                                        <div class="FormCounter">
                                                        <select onchange="GetDDlFilter(@formlist[i].Display_name)" class="form-control input-circle" DDlFilter="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class="form-control input-lg dspn" placeholder="@formlist[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        }  
                                                    </select>  
                                                    </div>                
                                                }
                                                else
                                                {
                                                        <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select  class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        } 
                                                    </select>
                                                            </div>
                                                }
                                            }
                                            else
                                            {
                                                if (formlist[i].IsLookUp == 1)
                                                {
                                                        <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoListrole = RelianceController.FormFieldController.DropDownvaluewithRole(Convert.ToString(formlist[i].FormId), Convert.ToString(formlist[i].FieldId), Convert.ToString(IsROleAssignmentDo.DocumentDataid));      
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoListrole.Count; k++)
                                                      { 
                                                        <option class="@formlist[i].FormName" value="@dropDownValueDoListrole[k].Key">@dropDownValueDoListrole[k].Values</option>;
                                                      } 
                                                     }
                                                        </select>
                                                        </div>
                                                }
                                                else if (formlist[i].IsDDLFilter == 1)
                                                {
                                                       <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoListrole = RelianceController.FormFieldController.DropDownvaluewithRole(Convert.ToString(@formlist[i].FormId), Convert.ToString(formlist[i].FieldId), Convert.ToString(IsROleAssignmentDo.DocumentDataid));     
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoListrole.Count; k++)
                                                      { 
                                                        <option class="@formlist[i].FormName" value="@dropDownValueDoListrole[k].Key">@dropDownValueDoListrole[k].Values</option>;
                                                      } 
                                                     }
                                                        </select>
                                                        </div>             
                                                }
                                                else
                                                {
                                                        <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select  class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        } 
                                                    </select>
                                                            </div>
                                                }
                                            }

                                        }


                                        else
                                        {
                                            if (formlist[i].IsLookUp == 1)
                                            {
                                                        <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                      { 
                                                        <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                      } 
                                                        }
                                                        </select>
                                                    </div>
                                            }
                                            else if (formlist[i].IsDDLFilter == 1)
                                            {
                                                        <div class="FormCounter">
                                                        <select onchange="GetDDlFilter(@formlist[i].Display_name)" class="form-control input-circle" DDlFilter="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class="form-control input-lg dspn" placeholder="@formlist[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        }  
                                                    </select>  
                                                    </div>                
                                            }
                                            else
                                            {
                                                        <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName </label>
                                                        <select  class="form-control input-circle" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        } 
                                                    </select>
                                                            </div>
                                            }

                                        }

                                    }

                                @:</div>
                                    @:<div>
          if (formlist[i].Field_type == "FilterDDL")
          {
              if (formlist[i].IsDDLFilter == 1)
              {  
                       <div class="FormCounter">
                          <span class="form-group">@formlist[i].UFieldName</span>
                          <select onchange="GetDDlFilter(@formlist[i].Display_name)" class="form-control input-circle  ISDDLFIlterss" DDlFilter="@formlist[i].FieldId" placeholder="@formlist[i].Field_description" id="@formlist[i].Display_name" name="@formlist[i].Display_name" value=""></select>
                          </div>
              }
              else
              {
                       <div class="FormCounter">
                          <span class="form-group">@formlist[i].UFieldName</span>
                          <select   class="form-control input-circle  ISDDLFIlterss" DDlFilter="@formlist[i].FieldId" placeholder="@formlist[i].Field_description" id="@formlist[i].Display_name" name="@formlist[i].Display_name" value="">
                          </select>
                          </div>
              }
          }
          @:</div>
                                    @:<div>
        if (formlist[i].Field_type == "CheckBoxList")
        {
                <div class="FormCounter">
                <label class='col-md-3 control-label'>@formlist[i].Display_name</label>
                @{Reliance.Modals.DropDownValueDoList CheckBoxList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));

                  for (int l = 0; l < CheckBoxList.Count; l++)
                  { 
                        <span><input type='checkbox' name="@formlist[i].Display_name"+"[]" value="@CheckBoxList[l].Key" /><label>"@CheckBoxList[l].Values</label></span>
                  }

                }
                    </div>
        }
    @:</div>
                                    @:<div>
        if (formlist[i].Field_type == "Lookup")
        {
            <div class="FormCounter">
                <span class="form-group">@formlist[i].UFieldName</span>
                <input type="@formlist[i].DataTypes"  required readonly='readonly' class="form-control input-circle LookUpID-@formlist[i].FieldId" placeholder="@formlist[i].Field_description" id="@formlist[i].Display_name" name="@formlist[i].Display_name" value=""/>
                </div>
        }
    @:</div>
                   @:</div>
           }
         }  

                                        <div class="table-scrollable">
                               <table class="table table-striped table-hover table-bordered dataTable no-footer" id="sample_editable_1" role="grid" aria-describedby="sample_editable_1_info" style="width: 981px;">
			@{Reliance.Modals.AllFieldProPertyList formlist1 = RelianceController.AllFieldandPropertyController.FieldByFormId("8", Convert.ToString(@Session["LOGGED_Company"]));                                                              
				@:<tr role="row">
                                      for (int i = 0; i < formlist1.Count; i++)
                                      {
                                          <th class="sorting_asc" tabindex="0" aria-controls="sample_editable_1" rowspan="1" colspan="1" aria-label="
									Username
									: activate to sort column ascending" style="width: 165px;" aria-sort="ascending">
									@formlist1[i].UFieldName
                                        </th>
                                          
                                      }
                                      <th class="sorting" tabindex="0" aria-controls="sample_editable_1" rowspan="1" colspan="1" aria-label=" Edit: activate to sort column ascending" style="width: 78px;">
										 Edit
									</th>
<th class="sorting" tabindex="0" aria-controls="sample_editable_1" rowspan="1" colspan="1" aria-label=" Delete: activate to sort column ascending" style="width: 114px;">
										 Delete
									</th>
									
                                      @:</tr>
              }
              
                @{Reliance.Modals.AllFieldProPertyList formlist2 = RelianceController.AllFieldandPropertyController.FieldByFormId("8", Convert.ToString(@Session["LOGGED_Company"]));
              
                @:<tr role="row">
                    for (int i = 0; i < formlist1.Count; i++)
                    {

                        if (formlist2[i].ActionFormFields != true)
                        {
                            if (formlist2[i].Field_type == "Text Box")
                            {

                                if (formlist2[i].Field_type == "date")
                                {
                                                   @:<td>            
                                                <input type="@formlist2[i].DataTypes"  class='form-control input-circle datepicker ' placeholder="@formlist2[i].Field_description" onkeyup="checkname();" id="@formlist2[i].FieldId" name="@formlist2[i].Display_name" value=""/>        
                                            @:</td>
                }
                                else if (formlist2[i].Field_type == "TextArea")
                                {
                                                 @:<td>
                                                <textarea name="@formlist2[i].DataTypes" rows="4" class="form-control input-circle "  placeholder="@formlist2[i].Field_description"  id="@formlist2[i].FieldId"  name="@formlist2[i].Display_name">
                                                                </textarea>
                                                       @:</td>
                                                               
                                }
                                else
                                {
                                    if (formlist2[i].UNIQUE == true)
                                    {
                                                            @:<td>
                                                            <input type="@formlist2[i].DataTypes"  class="form-control input-circle"  placeholder="@formlist2[i].Field_description" onblur="checkname(@formlist2[i].FormId,@formlist2[i].FieldId);"  id="@formlist2[i].FieldId"   name="@formlist2[i].Display_name"value=""/>                   
                                                           @:</td>    
                                                   }
                                    else
                                    {
                                                            @:<td>
                                                            <input type="@formlist2[i].DataTypes"  class="form-control input-circle"  placeholder="@formlist2[i].Field_description"  id="@formlist1[i].FieldId"   name="@formlist1[i].Display_name"value=""/>                   
                                                             @:</td>     
                                                   }
                                }

                            }

                        }



                        if (formlist2[i].Field_type == "AutoComplete")
                        { 
                                                @:<td>                      
                                                <input type="@formlist2[i].DataTypes"  class='form-control input-circle autocomplet ' placeholder="@formlist2[i].Field_description" id='txtAutoComplete'  name="@formlist2[i].Display_name"value=""/>       
                                              @:</td>                 
                                          }

                        if (formlist2[i].Field_type == "Drop Down")
                        {
                            if (formlist2[i].IsRoleAssignment == 1)
                            {
                                Reliance.Modals.IsROleAssignmentDo IsROleAssignmentDo = RelianceController.IsRoleAssignmentController.IsROleAssignment(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId), Convert.ToString(Session["LOGGED_UserId"]), Convert.ToString(Session["LOGGED_ROLE"]), "");
                                if (IsROleAssignmentDo.DocumentDataid == "")
                                {
                                    if (formlist2[i].IsLookUp == 1)
                                    {
                                                      @:<td>
                                                        <select onchange="GetLooKUP(@formlist2[i].Display_name)" class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                      { 
                                                        <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                      } 
                                                        }
                                                        </select>
                                                    @:</td>
                                                }
                                    else if (formlist2[i].IsDDLFilter == 1)
                                    {
                                                       @:<td>
                                                        <select onchange="GetDDlFilter(@formlist2[i].Display_name)" class="form-control input-circle" DDlFilter="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class="form-control input-lg dspn" placeholder="@formlist2[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        }  
                                                    </select>  
                                                 @:</td>             
                                                }
                                    else
                                    {
                                                       @:<td>
                                                        <select  class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        } 
                                                    </select>
                                                           @:</td>
                                                }
                                }
                                else
                                {
                                    if (formlist2[i].IsLookUp == 1)
                                    {
                                                       @:<td>
                                                        <select onchange="GetLooKUP(@formlist2[i].Display_name)" class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoListrole = RelianceController.FormFieldController.DropDownvaluewithRole(Convert.ToString(formlist2[i].FormId), Convert.ToString(formlist2[i].FieldId), Convert.ToString(IsROleAssignmentDo.DocumentDataid));      
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoListrole.Count; k++)
                                                      { 
                                                        <option class="@formlist2[i].FormName" value="@dropDownValueDoListrole[k].Key">@dropDownValueDoListrole[k].Values</option>;
                                                      } 
                                                     }
                                                        </select>
                                                       @:</td>
                                                }
                                    else if (formlist2[i].IsDDLFilter == 1)
                                    {
                                                      @:<td>
                                                       
                                                        <select onchange="GetLooKUP(@formlist2[i].Display_name)" class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoListrole = RelianceController.FormFieldController.DropDownvaluewithRole(Convert.ToString(@formlist2[i].FormId), Convert.ToString(formlist2[i].FieldId), Convert.ToString(IsROleAssignmentDo.DocumentDataid));     
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoListrole.Count; k++)
                                                      { 
                                                        <option class="@formlist2[i].FormName" value="@dropDownValueDoListrole[k].Key">@dropDownValueDoListrole[k].Values</option>;
                                                      } 
                                                     }
                                                        </select>
                                                       @:</td>        
                                                }
                                    else
                                    {
                                                       @:<td>
                                                        <select  class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        } 
                                                    </select>
                                                           @:</td>
                                                }
                                }

                            }


                            else
                            {
                                if (formlist2[i].IsLookUp == 1)
                                {
                                                       @:<td>
                                                        <select onchange="GetLooKUP(@formlist2[i].Display_name)" class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">          
                                                    @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                      for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                      { 
                                                        <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                      } 
                                                        }
                                                        </select>
                                                  @:</td>
                                            }
                                else if (formlist2[i].IsDDLFilter == 1)
                                {
                                                        @:<td>
                                                        <select onchange="GetDDlFilter(@formlist2[i].Display_name)" class="form-control input-circle" DDlFilter="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class="form-control input-lg dspn" placeholder="@formlist2[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        }  
                                                    </select>  
                                                   @:</td>         
                                            }
                                else
                                {
                                                        @:<td>  
                                                        <select  class="form-control input-circle" look="@formlist2[i].FieldId" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist2[i].Field_description">
                                                        @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist2[i].FormId), Convert.ToString(@formlist2[i].FieldId));     
                                                        <option value="0">Select</option>
                                                          for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                          { 
                                                            <option class="@formlist2[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                          } 
                                                        } 
                                                    </select>
                                                              @:</td>  
                                            }

                            }

                        }



                        if (formlist2[i].Field_type == "Lookup")
                        {
            @:<td>    
                <input type="@formlist2[i].DataTypes"  required readonly='readonly' class="form-control input-circle LookUpID-@formlist2[i].FieldId" placeholder="@formlist2[i].Field_description" id="@formlist2[i].Display_name" name="@formlist2[i].Display_name" value=""/>
                  @:</td>  
        }




                    }
                    <td>
										<a class="edit" href="javascript:;">
										Edit </a>
									</td>
                    <td>
										<a class="delete" href="javascript:;">
										Delete </a>
									</td>
								@:</tr>
                }
								</table>
                              

                    
                                

                    
                       
                        </div>
                                </div>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-3 col-md-9">
                                            <div id="contentdiv"></div>
                                            <input type="submit" id="btnSave"  onsubmit="validateForm()"  value="Save" class="btn btn-circle green" />
                                            <button type="button" id="cancle" data-dismiss="modal" class="btn btn-circle default">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                    }
                   
                           </div>
 <script type="text/javascript">
     $('#btnSave').on('click', function (e) {
         e.preventDefault();
         $("#FormValidationId .input-circle").each(function () {
             var Fieldid = this.id;
             var fieldValue = $(this).val();
             var fieldtype = $(this).attr('type');
            
             var result = matchValues(Fieldid, fieldValue, fieldtype);             
             if (result =="Errordata") {               
                 return false;
             }
         });
         
     });

     function matchValues(Fieldid, fieldValue, fieldtype)
     {
         var returnValue = null;
         var ValidateField = "M" + Fieldid;
         $("#" + ValidateField).each(function () {
             var ValidationId = this.name;
             var Validationvalue = $(this).val();
             var validationtype = $(this).attr("validationtype");
             var validatevalue = $(this).attr("ValidateValue");

             if (ValidationId == Fieldid)
             {
           
                 if (validationtype == 3)
                 {
                     if (fieldValue == "")
                     {
                         $('#errmsg').html(Validationvalue);
                         returnValue = "Errordata";
                         return false;
                     }
                     else
                     {
                         $('#errmsg').html("");
                     }

                    
                     if (fieldValue >= 0 && fieldValue <= validatevalue)
                     {
                         $('#errmsg').html(Validationvalue);
                         returnValue = "Errordata";
                         return false;
                     }
                     else {
                         $('#errmsg').html("");
                     }
                     if (fieldtype == "number")
                     {

                         var x = document.getElementById(Fieldid).value;
                         var regex = /^[a-zA-Z]+$/;
                         if (x.match(regex)) {
                             $('#errmsg').html("Must input numbers");
                             returnValue = "Errordata";
                             return false;

                         }
                         else {
                             $('#errmsg').html("");
                         }

                     }
                     if (fieldtype == "email")
                     {                 
                         var reg = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
                         var emailField = document.getElementById(Fieldid).value;
                         if (reg.test(emailField.value) == false)
                         { 
                             $('#errmsg').html(Validationvalue);
                             returnValue = "Errordata";
                             return false;
                         }
                         else
                         {
                             $('#errmsg').html("");
                         }

                     }
                     
                    
                    

                 }
                
             }

         });
         return returnValue;
            
     }
     


    </script>
<script type="text/javascript">
    $(document).ready(function () {
        var n = 2;
        $("[class*='columnStyle'] div").children('.FormCounter').addClass('col-md-' + 12 / n + '');
    });
</script>



								


*@
