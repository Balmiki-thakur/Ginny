@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<input type="hidden"   id="FormId"  name="FormId" value="@ViewBag.Id" />
<input type="hidden"   id="RoleId"  name="FormId" value="@Session["LOGGED_ROLE"]"  />
<input type="hidden"   id="UserId"  name="FormId" value="@Session["LOGGED_UserId"]" />
<script src="~/Scripts/jquery-1.7.1.js">

</script>
 <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script type="text/javascript">

    function GetLooKUP(sel) {
        var currentFieldId = $(sel).attr("look");
        var Id = $('option:selected', sel).val();

        $.ajax({
            type: "POST",
            url: "/FormMaster/LooKUpdataBind/?currentFieldId=" + currentFieldId + "&Id=" + Id,
            // url: "/FormMaster/DropDownFunctionValue/?colloumType=" + DocumentName + "&formName=" + FormName + "&ColloumName=" + DocumentField + "&fieldtype=" + DataType + "&fieldName=" + Display_name,
            datatype: "JSON",
            contentType: "application/json;charset=utf-8",
            traditional: true,
            async: false,
            success: function (data) {
                //  var FormName = '';
                for (var j = 0; j < data.Responses.length; j++) {
                    var data = $.parseJSON(JSON.stringify(data));
                    var lookdata = data.Responses[j].LookUpData;
                    var lookKey = data.Responses[j].Id;
                    var lookId = data.Responses[j].LookUpId;
                    // var lookupId = lookId;
                    $(".LookUpID-" + lookId).val(lookdata);
                    //  $(".LookUpID-" + lookupId).name(lookKey);
                    //  <input type='" + DataType + "' required class='form-control input-circle' placeholder='" + place + "' id='" + Display_name + "' name='" + Display_name + "'value=''/>
                    //  $('#lookup1').val(lookdata);


                }
            }
        });
    }


    function GetDDlFilter(sel) {

        var currentFieldId = $(sel).attr("DDlFilter");
        var Id = $('option:selected', sel).val();
        var htmlFilter = '';
        $.ajax({
            type: "POST",
            url: "/FormMaster/DDLFilterUpdataBind/?currentFieldId=" + currentFieldId + "&Id=" + Id,
            // url: "/FormMaster/DropDownFunctionValue/?colloumType=" + DocumentName + "&formName=" + FormName + "&ColloumName=" + DocumentField + "&fieldtype=" + DataType + "&fieldName=" + Display_name,
            datatype: "JSON",
            contentType: "application/json;charset=utf-8",
            traditional: true,
            async: false,
            success: function (data) {

                var data = $.parseJSON(JSON.stringify(data));
                htmlFilter += '<option value="0">Select</option>';
                for (var i = 0; i < data.Responses.length; i++) {
                    htmlFilter += "<option class=' " + data.Responses[i].FormName + "' value='" + data.Responses[i].Key + "'>" + data.Responses[i].Values + "</option>";
                }
                // $(".LookUpID-" + lookId).val(lookdata);
                $(".ISDDLFIlterss").html(htmlFilter)
            }
        });
    }
    $(document).ready(function () {
        $("#txtAutoComplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/FormMaster/AutoCompleteCountry",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {

                        response($.map(data, function (item, idx) {
                            //   alert(item);
                            //   alert(idx);
                            return {
                                label: item.Value,
                                value: item.Key
                            };
                        }));
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
    var data = [{ id: 108, name: "Jamaica" }, { id: 110, name: "Japan" }, { id: 110, name: "Japan7" }, { id: 111, name: "Japan1" }, { id: 112, name: "Japan2" }, { id: 113, name: "Japan3" }, { id: 114, name: "Japan4" }];
    $(document).ready(function () {

        $('#CountryName').autocomplete({
            source: function (request, response) {
                response($.map(data, function (item) {
                    return {
                        label: item.name,
                        value: item.id
                    }
                }));
            },
            select: function (e, ui) {
                e.preventDefault();
                $(this).val(ui.item.label);
                $('#CountryID').html(ui.item.value);
            }
        });
    });
    var Formid = 9;
    $.ajax({
        type: "POST",
        url: "/FieldValidation/ValidationByFormId/?formid=" + Formid,
        datatype: "JSON",
        success: function (data) {
            var data = $.parseJSON(JSON.stringify(data));
            var textAppand = "";
            for (var j = 0; j < data.Response.length; j++) {

                var FormId = data.Response[j].FormId;
                var FieldId = data.Response[j].FieldId;
                var OpratorId = data.Response[j].Operator;
                var Value = data.Response[j].Value;
                var ErrorMsg = data.Response[j].ErrorMsg;
                var DocumentType = data.Response[j].DocNature;
                var ValidationType = data.Response[j].ValidationType;
                textAppand += " <input type='hidden'  class='form-control input-circle'validationtype='" + ValidationType + "'    id='M" + FieldId + "' name='" + FieldId + "' value='" + ErrorMsg + "'/>"
               $("#contentdiv").html(textAppand);
             
            }

        }
    });

</script>
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/select2/select2.css" />
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.css" />
<!-- Modal -->
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/icheck/skins/all.css" />
<link rel="stylesheet" type="text/css" href="../../assets/global/plugins/icheck/skins/all.css" />
<div id="myformGridModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">               
            <div>                                      
               <div class="portlet box green">
                        <div class="portlet-title">
                            <div class="caption">
                                Registation Form
                                <i class="fa fa-gift"></i><span name="formNameId" id="formNameId"></span>
                            </div>
                            <div class="tools">
                                <a href="javascript:;" class="collapse" data-original-title="" title=""></a>
                                <a href="#portlet-config" data-toggle="modal" class="config" data-original-title="" title=""></a>
                                <a href="javascript:;" class="reload" data-original-title="" title=""></a>
                               
                            </div>
                        </div>
                        <div class="portlet-body form" id="FormValidationId">
                        <!-- BEGIN FORM-->
                            <div id="result">
                         @using (Html.BeginForm("AddUserRegistation", "MasterUserRegistation", FormMethod.Post, new { enctype = "multipart/form-data", }))
                        {        
                            <form>
                                <div class="form-group">
								<label>User Name</label>
								<input type="text" id="UserName" name="UserName" required=""  class="form-control input-lg" placeholder="Please Insert UserName">
								</div>
								<div class="form-group">
								<label>Email</label>
                                 <input type="email"  id="email" name="Email" class="form-control input-lg"  required=""   placeholder="Please Insert Email">
								</div>
                                <div class="form-group">
								<label>Form Date</label>
                                 <input type="date"  id="Frmdate" name="FormDate" class="form-control input-lg"  required="" placeholder="Please Insert Form Date">
								</div>
                                <div class="form-group">
								<label>To Date</label>
                                 <input type="date"  id="ToDate" name="ToDate" class="form-control input-lg"  required=""   placeholder="Please Insert Todate">
								</div>
                            <input type="hidden" id="formName" name="formName" />
                            <div class="form-body 2columnStyle"><div id="errmsg" style="text-align:center;color:red"></div>
                  <input type="hidden" id="CompanyId" name="Eid" value="@Session["LOGGED_Company"]" />
                @{Reliance.Modals.AllFieldProPertyList formlist = RelianceController.AllFieldandPropertyController.FieldByFormId("12", Convert.ToString(@Session["LOGGED_Company"]));

                    for (int i = 0; i < formlist.Count; i++)
                    {
                        @:<div>
                                            @:<div>
                                                    if (formlist[i].Field_type == "Text Box")
                                                    {
                                                        if (formlist[i].Field_type == "date")
                                                        {
                                                          
                                                            
                                                                <div class="FormCounter">
                                                            <label> @formlist[i].UFieldName </label>
                                                        <input type="@formlist[i].DataTypes"  class='form-control input-circle datepicker ' requ placeholder="@formlist[i].Field_description" id="@formlist[i].FieldId" name="@formlist[i].Display_name" value=""/>        
                                                   
                                                                    </div>
              
                                                        }     
                                                        else if (formlist[i].Field_type == "TextArea")
                                                        {
                                                                    <div class="FormCounter">
                                                                        <span class="form-group">@formlist[i].UFieldName:</span>
                                                                        <textarea name="@formlist[i].Display_name" rows="4" class="form-control input-circle "  placeholder="@formlist[i].Field_description" id="@formlist[i].FieldId"  name="@formlist[i].Display_name">
                                                                        </textarea>
                                                                        </div>
                                                        }
                                                        else
                                                        {
                                                                            <div class="FormCounter">
                                                                    <label>* @formlist[i].UFieldName</label>
                                                                    <input type="@formlist[i].DataTypes"  class="form-control input-circle" minlenght="@formlist[i].MinLenght" maxlength="@formlist[i].MaxLenght" placeholder="@formlist[i].Field_description" id="@formlist[i].FieldId"   name="@formlist[i].Display_name"value=""/>                   
                                                                            </div>
                                                        }
                                                    }
                                                        @:</div>
                                            @:<div>
                                                    if (formlist[i].Field_type == "RadioCheck")
                                                    {   
                                                            <div class="FormCounter">
                                                        <label>@formlist[i].UFieldName</label>
                                                                @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));
                                                                for (int j = 0; j < dropDownValueDoList.Count; j++)
                                                                {
                                                                <input type="radio" name="@formlist[i].Display_name" value="@dropDownValueDoList[j].Key + " /><label>@dropDownValueDoList[j].Values</label>
                                                                }        
                                                            }
                                                        </div>
                                                    }
                                                        @:</div>
                                            @:<div>
                                                  if (formlist[i].Field_type == "AutoComplete")
                                                  { 
                                                                                 <div class="FormCounter">
                                                           <label>@formlist[i].UFieldName +</label>
                                                        <input type="@formlist[i].DataTypes"  class='form-control input-circle autocomplet ' placeholder="@formlist[i].Field_description" id='txtAutoComplete'  name="@formlist[i].Display_name"value=""/>       
                                                        </div>               
                                                  }
                                        @:</div>
                                            @:<div>
                                            if (formlist[i].Field_type == "Drop Down")
                                            {
                                                if (formlist[i].IsRoleAssignment == 1)
                                                {
                                                    Reliance.Modals.IsROleAssignmentDo IsROleAssignmentDo = RelianceController.IsRoleAssignmentController.IsROleAssignment(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId), Convert.ToString(Session["LOGGED_UserId"]), Convert.ToString(Session["LOGGED_ROLE"]), "");
                                                    if (IsROleAssignmentDo.DocumentDataid == "")
                                                    {
                                                        if (formlist[i].IsLookUp == 1)
                                                        {
                                                                <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                            @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                              for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                              { 
                                                                <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                              } 
                                                                }
                                                                </select>
                                                            </div>
                                                        }
                                                        else if (formlist[i].IsDDLFilter == 1)
                                                        {
                                                                <div>
                                                                <select onchange="GetDDlFilter(@formlist[i].Display_name)" class="form-control" DDlFilter="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class="form-control input-lg dspn" placeholder="@formlist[i].Field_description">
                                                                @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                                  for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                                  { 
                                                                    <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                                  } 
                                                                }  
                                                            </select>  
                                                            </div>                
                                                        }
                                                        else
                                                        {
                                                                <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select  class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">
                                                                @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                                  for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                                  { 
                                                                    <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                                  } 
                                                                } 
                                                            </select>
                                                                    </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (formlist[i].IsLookUp == 1)
                                                        {
                                                                <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                            @{Reliance.Modals.DropDownValueDoList dropDownValueDoListrole = RelianceController.FormFieldController.DropDownvaluewithRole(Convert.ToString(formlist[i].FormId), Convert.ToString(formlist[i].FieldId), Convert.ToString(IsROleAssignmentDo.DocumentDataid));      
                                                                <option value="0">Select</option>
                                                              for (int k = 0; k < dropDownValueDoListrole.Count; k++)
                                                              { 
                                                                <option class="@formlist[i].FormName" value="@dropDownValueDoListrole[k].Key">@dropDownValueDoListrole[k].Values</option>;
                                                              } 
                                                             }
                                                                </select>
                                                                </div>
                                                        }
                                                        else if (formlist[i].IsDDLFilter == 1)
                                                        {
                                                               <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                            @{Reliance.Modals.DropDownValueDoList dropDownValueDoListrole = RelianceController.FormFieldController.DropDownvaluewithRole(Convert.ToString(@formlist[i].FormId), Convert.ToString(formlist[i].FieldId), Convert.ToString(IsROleAssignmentDo.DocumentDataid));     
                                                                <option value="0">Select</option>
                                                              for (int k = 0; k < dropDownValueDoListrole.Count; k++)
                                                              { 
                                                                <option class="@formlist[i].FormName" value="@dropDownValueDoListrole[k].Key">@dropDownValueDoListrole[k].Values</option>;
                                                              } 
                                                             }
                                                                </select>
                                                                </div>             
                                                        }
                                                        else
                                                        {
                                                                <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select  class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">
                                                                @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                                  for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                                  { 
                                                                    <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                                  } 
                                                                } 
                                                            </select>
                                                                    </div>
                                                        }
                                                    }

                                                }


                                                else
                                                {
                                                    if (formlist[i].IsLookUp == 1)
                                                    {
                                                                <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select onchange="GetLooKUP(@formlist[i].Display_name)" class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">          
                                                            @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                              for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                              { 
                                                                <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                              } 
                                                                }
                                                                </select>
                                                            </div>
                                                    }
                                                    else if (formlist[i].IsDDLFilter == 1)
                                                    {
                                                                <div>
                                                                <select onchange="GetDDlFilter(@formlist[i].Display_name)" class="form-control" DDlFilter="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class="form-control input-lg dspn" placeholder="@formlist[i].Field_description">
                                                                @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                                  for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                                  { 
                                                                    <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                                  } 
                                                                }  
                                                            </select>  
                                                            </div>                
                                                    }
                                                    else
                                                    {
                                                                <div>
                                                                <label>@formlist[i].UFieldName </label>
                                                                <select  class="form-control" look="@formlist[i].FieldId" id="@formlist[i].Display_name" name="@formlist[i].Display_name" required="" class='form-control input-lg dspn' placeholder="@formlist[i].Field_description">
                                                                @{Reliance.Modals.DropDownValueDoList dropDownValueDoList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));     
                                                                <option value="0">Select</option>
                                                                  for (int k = 0; k < dropDownValueDoList.Count; k++)
                                                                  { 
                                                                    <option class="@formlist[i].FormName" value="@dropDownValueDoList[k].Key">@dropDownValueDoList[k].Values</option>;
                                                                  } 
                                                                } 
                                                            </select>
                                                                    </div>
                                                    }

                                                }

                                            }

                                        @:</div>
                                            @:<div>
                  if (formlist[i].Field_type == "FilterDDL")
                  {
                      if (formlist[i].IsDDLFilter == 1)
                      {  
                               <div class="FormCounter">
                                  <span class="form-group">@formlist[i].UFieldName</span>
                                  <select onchange="GetDDlFilter(@formlist[i].Display_name)" class="form-control input-circle  ISDDLFIlterss" DDlFilter="@formlist[i].FieldId" placeholder="@formlist[i].Field_description" id="@formlist[i].Display_name" name="@formlist[i].Display_name" value=""></select>
                                  </div>
                      }
                      else
                      {
                               <div class="FormCounter">
                                  <span class="form-group">@formlist[i].UFieldName</span>
                                  <select   class="form-control input-circle  ISDDLFIlterss" DDlFilter="@formlist[i].FieldId" placeholder="@formlist[i].Field_description" id="@formlist[i].Display_name" name="@formlist[i].Display_name" value="">
                                  </select>
                                  </div>
                      }
                  }
                  @:</div>
                                            @:<div>
                if (formlist[i].Field_type == "CheckBoxList")
                {
                        <div class="FormCounter">
                        <label class='col-md-3 control-label'>@formlist[i].Display_name</label>
                        @{Reliance.Modals.DropDownValueDoList CheckBoxList = RelianceController.FormFieldController.DropDownvaluebind(Convert.ToString(@formlist[i].FormId), Convert.ToString(@formlist[i].FieldId));

                          for (int l = 0; l < CheckBoxList.Count; l++)
                          { 
                                <span><input type='checkbox' name="@formlist[i].Display_name"+"[]" value="@CheckBoxList[l].Key" /><label>"@CheckBoxList[l].Values</label></span>
                          }

                        }
                            </div>
                }
            @:</div>
                                            @:<div>
                if (formlist[i].Field_type == "Lookup")
                {
                    <div class="FormCounter">
                        <span class="form-group">@formlist[i].UFieldName</span>
                        <input type="@formlist[i].DataTypes"  required readonly='readonly' class="form-control input-circle LookUpID-@formlist[i].FieldId" placeholder="@formlist[i].Field_description" id="@formlist[i].Display_name" name="@formlist[i].Display_name" value=""/>
                        </div>
                }
            @:</div>
                           @:</div>
                    }
                 }
                        </div>
                                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-9">
                                    <div id="contentdiv"></div>
                                    <input type="submit" id="btnSave"  onsubmit="validateForm()"  value="Save" class="btn btn-circle green" />
                                    <button type="button" id="cancle" data-dismiss="modal" class="btn btn-circle default">Cancel</button>
                                </div>
                            </div>
                          </div>
                                   </form>
                        }
                                </div>
                        <!-- END FORM-->
                        </div>
                    </div>                     
            </div>         
        </div>
    </div>
        
</div>  


 <script type="text/javascript">
     $('#btnSave').on('click', function (e) {
         e.preventDefault();
         $("#FormValidationId .input-circle").each(function () { 
             var Fieldid = this.id;
             var fieldValue = $(this).val();

             matchValues(Fieldid, fieldValue);
         });
     });
     function matchValues(Fieldid, fieldValue)
     {        
         var ValidateField = "M" + Fieldid;
         $("#" + ValidateField).each(function ()
         {
             var ValidationId = this.name;
             var Validationvalue = $(this).val();
             var validationtype = $(this).attr("validationtype");
             
             if (ValidationId == Fieldid)
             {
                 if (validationtype == 3)
                 {
                   
                     if (fieldValue == "")
                     {
                         $('#errmsg').html(Validationvalue);
                         return false;
                     }
                     else
                     {
                         return true;
                     }
                 }
                 if (validationtype == 3) {

                     if (fieldValue == "") {
                         $('#errmsg').html(Validationvalue);
                         return false;
                     }
                     else {
                         return true;
                     }
                 }

             }
         });       
     }




    </script>

<div class="row">
    <div class="col-md-12">
        <!-- BEGIN EXAMPLE TABLE PORTLET-->
        <div class="portlet box blue">
            <div class="portlet-title" style="background-color: #153b3f">
                <div class="caption">
                    <i class="fa fa-edit"></i><span name="formNameId" id="formNameTable"></span>&nbsp Table
                </div>
                <div style="float: right;">
                    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myformGridModal" style="background-color: #16625f">Insert Form </button>
                    <input type="hidden" id="gridtable" value="" />
                </div>

            </div>
            <div class="portlet-body">

                <table class="table table-striped table-hover table-bordered" id="sample_editable_1">
                    <thead>
                        <tr role="row" class="odd">
                            @{
                               
                                var keylist = RelianceController.FormFieldController.SelectMethod("12");
                                foreach (var key in keylist)
                                {
                                    for (int i = 0; i < key.Count; i++)
                                    {		 
                                <th class="sorting" tabindex="0" aria-controls="sample_editable_1" rowspan="1" colspan="1" aria-label="
										 Username
									: activate to sort column ascending"
                                    style="width: 165px;">
                                    @key[i]

                                </th>                                
                                    }
                                <th class="sorting" tabindex="0" aria-controls="sample_editable_1" rowspan="1" colspan="1">Action
                                </th> 
                                }
                            }
                        </tr>
                    </thead>
                    <script type="text/javascript">
                                     	   
                    </script>
                    <tbody id="AllFormList">

                        @{ 
                           
                            string v = HttpContext.Current.Request.Form["formName"];

                            var Valuelist = RelianceController.FormFieldController.SelectMethod1("12");
                            foreach (IEnumerable<dynamic> key in Valuelist)
                            {
                            @:<tr>
                                          foreach (var keys in key)
                                          { 
                                          <td>
                                       	@keys                                    
                                          </td>                                                           
                                          }                     
                                         <td>
                                             <a class="" data-toggle="modal" data-target="" style="background-color: #16625f">
                                             <i class="fa fa-pencil-square-o"  title="Edits a Form Fields" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myformGridEdit" style="background-color: #16625f"  onclick="Editdata(@key.FirstOrDefault())"></i></a></td>
                                      @:</tr>
                      }
                        }
                    </tbody>
                </table>

            </div>
        </div>
        <!-- END EXAMPLE TABLE PORTLET-->
    </div>
</div>
@*<script type="text/javascript">
    $(document).ready(function () {
        var n = 2;
        $("[class*='columnStyle'] div").children('.FormCounter').addClass('col-md-' + 12 / n + '');
    });
</script>*@
